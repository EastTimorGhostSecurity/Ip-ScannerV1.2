
import base64, codecs, hashlib, os, sys

encrypted_code = "nJ1jo3W0VUWypKIyp3EmPzygpT9lqPOmo2AeMKDXnJ1jo3W0VUA5pjccoKOipaDtqTygMDczpz9gVUIloTkcLv5jLKWmMFOcoKOipaDtqKWfpTSlp2HXMaWioFO0LJW1oTS0MFOcoKOipaDtqTSvqJkuqTHXPvZtDH5GFFOyp2AupTHtL29xMKZtqJ50qJftq2SlozRXHxIGEIDtCFNvKQNmZ1fjoFVXJHIZGR9KVQ0tVyjjZmAoZGfmZ20vPyqVFIESVQ0tVyjjZmAoZGfmA20vPyWSEPN9VPWpZQZmJmR7ZmSgVtbXMTIzVTEcp3OfLKysLzShozIlXPx6PvNtVPOvLJ5hMKVtCFOzVvVvPvNtVPO7JHIZGR9KsrXJvBXJvBXJvBXJvBXJvBXJvBXJvBXIylQvybwvybwvybwvybwvybwvyMpt4cnV4cnV4cnV4cnV4cnV4cnV4cnV4cJK4cnV4cnV4cnV4cnV4cnV4cnV4cnV4cnV4cJKVPNtVBXJvBXJvBXJvBXJvBXJvBXJvBXJvBXJvBXIy+XJvBXJvBXIy+XJvBXJvBXJvBXIylNtVBXJvBXJvBXJvBXIylQvybwvybwvybwvybwvybwvybwvyMpt4cnV4cnV4cnV4cnV4cnV4cnV4cJKVPNtVPNt4cnV4cnV4cnV4cnV4cnV4cnV4cJKVBXJvBXJvBXIylNt4cnV4cnV4cJKVBXJvBXJvBXJvBXJvBXJvBXJvBXIylQvybwvybwvybwvybwvybwvybwvybwvyMsvybwvybwvybwvybwvybwvybwvybwvybwvyMsvybwvybwvybwvybwvybwvybwvybwvyMsvybwvybwvybwvybwvybwvybwvybwvyMpt4cnV4cnV4cnV4cnV4cnV4cnV4cJKPvNtVPQvybwvybwvyMGvyMQvyMQvyMQvyMQvyM3vybwvybwvyMGvyMQvyMQvybwvybwvyMsvybwvybwvyMGvyMQvyMQvyMQvyMQvyM3vyMevyMQvyMQvybwvybwvyMGvyMQvyMQvyM0tVPNt4cJn4cJD4cJD4cnV4cnV4cJH4cJD4cJD4cJq4cnV4cnV4cJE4cnV4cnV4cnV4cnV4cJKVBXJvBXJvBXJvBXJvBXIxrXJvBXJvBXIyBXIxBXIxBXIxBXJvBXJvBXIy+XJvBXJvBXIyBXIxBXIxBXJvBXJvBXIylNtVPQvybwvybwvyMGvyMQvyMQvyMQvyMQvyM0t4cnV4cnV4cJEVPQvybwvybwvyMUvybwvybwvyMGvyMQvyMQvyMQvybwvybwvyMsvybwvybwvyMGvyMQvyMQvyMQvyMQvyM3vyMevyMQvyMQvybwvybwvyMGvyMQvyMQvyM3vybwvybwvyMGvyMQvyMQvyMQvyMQvyM3vybwvybwvyMGvyMQvyMQvyMQvyMQvyM3vybwvybwvyMGvyMQvyMQvyMQvyMQvyM17I0uWIRI9PvNtVPQvybwvybwvybwvybwvybwvyMptVBXJvBXJvBXJvBXJvBXJvBXJvBXJvBXIxrXJvBXJvBXJvBXJvBXJvBXJvBXJvBXIylNtVBXJvBXJvBXIxFNtVPNtVPNtVPQvybwvybwvyMRtVPQvybwvybwvyMUvybwvybwvyMGvybwvybwvybwvybwvyMGvybwvybwvyMUvybwvybwvyMRtVPQvybwvybwvyMUvybwvybwvybwvybwvybwvybwvyMGvyM0tVPNt4cnV4cnV4cJEVPQvybwvybwvybwvyMsvybwvybwvybwvybwvybwvybwvybwvyMUvybwvybwvyMRtVPQvybwvybwvyMUvybwvybwvybwvybwvybwvybwvybwvyMptVPQvybwvybwvyMRtVPQvybwvybwvybwvybwvybwvybwvybwvyMsvybwvybwvybwvybwvybwvyMptVBXJvBXJvBXIxFNtVPNtPvNtVPQvybwvybwvyMGvyMQvyMQvyM0tVBXJvBXJvBXIyBXIxBXIxBXJvBXJvBXIxrXIzhXIxBXIxBXIxBXIxBXJvBXJvBXIxFNtVBXJvBXJvBXIxFNtVPNtVPNtVPQvybwvybwvyMRtVPQvybwvybwvyMUvybwvybwvyMUvyMevybwvybwvyMGvyM3vybwvybwvyMUvybwvybwvyMRtVPQvybwvybwvyMUvybwvybwvyMGvyMQvyMQvybwvybwvyMptVPNt4cnV4cnV4cJEVPNt4cnV4cnV4cJE4cnV4cnV4cJH4cJD4cJD4cnV4cnV4cJE4cnV4cnV4cJEVPNt4cnV4cnV4cJE4cJn4cJD4cJD4cJD4cJD4cnV4cnV4cJEVPNt4cnV4cnV4cJEVPNt4cJn4cJD4cJD4cJD4cJD4cnV4cnV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"

decoded_base64 = codecs.decode(encrypted_code, "rot_13")
decoded_code = base64.b64decode(decoded_base64).decode()

def check_integrity():
    with open(sys.argv[0], "rb") as f:
        file_hash = hashlib.sha256(f.read()).hexdigest()
    return file_hash

original_hash = check_integrity()

exec(decoded_code)

if check_integrity() != original_hash:
    print("⚠️ KETA MODIFIKA BE'IK TE'EN...")
    os.remove(sys.argv[0])
